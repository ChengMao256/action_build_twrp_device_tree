name: 生成TWRP设备树

on:
  workflow_dispatch:
    inputs:
      PY:
        description: 'Python3版本（推荐3.6/3.9）'
        required: true
        default: '3.9'
      IMG:
        description: 'IMG直链'
        required: true
        default: ''

jobs:
  CheckMode:
    runs-on: ubuntu-latest
    outputs:
          FullName: ${{ steps.vfilename.outputs.FullName }}
          FName: ${{ steps.vfilename.outputs.FName }}
          EName: ${{ steps.vfilename.outputs.EName }}
          mode: ${{ steps.setmode.outputs.mode }}
    
    steps:
      - name: Check Out
        uses: actions/checkout@v4		

      - name: 准备环境         
        run: |          
          sudo apt update
          sudo apt -y install cpio wget
          ls
          
      - name: 检测运行模式
        id: setmode
        if: ${{ startsWith( github.event.inputs.IMG , 'http') }}
        run: |
          echo "mode=true" >> "$GITHUB_OUTPUT"
          
          FullName=$(basename "${{ github.event.inputs.IMG }}")
            echo "FullName=${FullName}" >> "$GITHUB_ENV"
            echo "env.FullName"
          wget ${{ github.event.inputs.IMG }}
          
          
      #- name: 缓存_URL文件
      #  if: ${{ env.funmode }}
      #  uses: actions/cache@main
      #  with:
      #    path: ./${{ github.event.inputs.IMG }}
      #    key: download-cache-${{ github.event.inputs.IMG }}
          
      #- name: 缓存_软件包        
      #  uses: actions/cache@main
      #  with:
      #    path: /var/cache/apt
      #    key: apt-cache-${{ runner.os }}-${{ github.event.inputs.IMG }}
          
      - name: 常规方式获取文件
        env:
          funmode: ${{ steps.setmode.outputs.mode }}        
        if:  ${{ ! env.funmode }}
        run: |
            echo "FullName= ${{ github.event.inputs.IMG }}" >> "$GITHUB_ENV"
        

      - name: 拆分文件名        
        run: |
            echo "EName=$(echo "$FullName" | sed -n 's/^\(.*\)\.\([^.]*\)$/\2/p')" >> "$GITHUB_ENV"
            echo "FName=${FullName%.*}" >> "$GITHUB_ENV"
            
      - name: 显示文件名
        id: vfilename        
        run: |
            echo "文件名是：$FName"
            echo "扩展名是：$EName"
            echo "文件全名是：$FullName"
            echo "FullName=$FullName" >> "$GITHUB_OUTPUT"
            echo "FName=$FName" >> "$GITHUB_OUTPUT"
            echo "EName=$EName" >> "$GITHUB_OUTPUT"
            
        
          
          
  #initial_Pack:
   # runs-on: ubuntu-latest              
    #steps:
    #  - name: Check Out
    #    uses: actions/checkout@v4
              
      - name: 准备Python3
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.PY }}
          cache: 'pip'
          
      - name: 准备TWRP生成器 
        ##run: pip3 install -r twrpdtgen       
        run: |
          ls ~/
          pip3 install twrpdtgen
        
      - name: 缓存文件          
        uses: actions/cache@main        
        with:
          path: |            
            ~/.cache/pip
          key: |              
            ${{ runner.os }}-pip-${{ github.event.inputs.IMG }}
            
      


  #build:
  #  runs-on: ubuntu-latest
  # needs: [CheckMode, initial_Pack] 
    
    #env: 
    #  #FullName: ${{ needs.CheckMode.outputs.FullName }}
    #  FName: ${{ needs.CheckMode.outputs.FName }}
    #  EName: ${{ needs.CheckMode.outputs.EName }}
    #steps:
    #  - name: 恢复环境
    #    uses: actions/cache@main
    #    with:
    #      path: |            
    #        /var/cache/apt
    #        ~/.cache/pip
    #      key: |            
    #        apt-cache-${{ runner.os }}-${{ github.event.inputs.IMG }}
    #        ${{ runner.os }}-pip-${{ github.event.inputs.IMG }}
    #      restore-keys: | 
    #        ${{ runner.os }}-pip-${{ github.event.inputs.IMG }}
    #        apt-cache-${{ runner.os }}-${{ github.event.inputs.IMG }}
    #        apt-cache-${{ runner.os }}-
    #        download-cache-${{ github.event.inputs.IMG }}
    #        download-cache
    #        apt-cache-${{ runner.os }}-bulid-
    #        apt-cache-${{ runner.os }}
            
    #  - name: 恢复URL文件
    #    if: ${{ needs.setup.outputs.mode }}
    #    uses: actions/cache@main
    #    with:
    #      path: ./${{ github.event.inputs.IMG }}
    #      key: download-cache-${{ github.event.inputs.IMG }} 
          
      - name: 执行         
        run: |
          ls
          mkdir out 
          echo "${{ needs.CheckMode.outputs.FullName }}"
          python3 -m twrpdtgen -o ./out/ ./${{ env.FullName }} 


      - name: 打压缩包
        run: |
          ls
          cd ./out
          echo "开始打包"
          zip -r -9 ../TWRP_Tree_From-${{ github.run_id }}_${{ env.FName }}.zip ./*
          ls
          cd ..
##	  ${{ steps.filename.outputs.filename }}

      ##- name: 上传
      ##  uses: actions/upload-artifact@main
      ##  with:  
      ##    name: TWRP_Device_Tree-${{ github.run_id }}  
      ##    path: ./out/*

      - name: 配置上传会话
        uses: lhotari/action-upterm@main
        with:
          ## 限制ssh访问，并为触发工作流的用户添加ssh公钥
          limit-access-to-actor: true
          ## 限制ssh访问并添加列出的GitHub用户的ssh公钥
          limit-access-to-users: peter-tank
        ## 如果1分钟后没有人连接，请关闭服务器。
          wait-timeout-minutes: 1

      - name: 上传到发布
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./TWRP_Tree_From-${{ github.run_id }}_${{ env.FName }}.zip
          name: ${{ env.FName }}_TWRP_Device_Tree
          tag_name: ${{ github.run_id }}
          body: |
            描述：在线生成TWRP设备树	    
            源：${{ github.event.inputs.IMG }}
            版本：${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     

      ##- name: Release
      ##  uses: softprops/action-gh-release@v1
      ##  env:  
      ##    GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      ##  with:
      ##    files: ./TWRP_Device_Tree-${{ github.run_id }}.zip
      ##    name: TWRP_Device_Tree-${{ github.run_id }}
      ##    tag_name: ${{ github.run_id }}
      ##    body: TWRP设备树-${{ github.event.inputs.IMG }}
      ##    draft: true

      - name: 清理编译流程  
        uses: Mattraks/delete-workflow-runs@main
        with:  
          retain_days: 0  
          keep_minimum_runs: 2
